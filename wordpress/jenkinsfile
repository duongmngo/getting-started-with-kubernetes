pipeline {

  agent any    

  stages {

    stage('Initilization') {
      steps {
        echo 'Building...'    
        echo 'Check required configuraiton for your building environment.'        
        echo 'Install libraries'        
      }
    }            

    stage("Build Container Image") {
      steps { 
        script {
          sh "git rev-parse --short HEAD > commit-id" 
          tag = readFile('commit-id').replace("\n", "").replace("\r", "")
          env.KUBECONFIG="path_to_kubernetes_config/config"
          appName = "wordpress"
          imageName = "your_repository/${appName}:${tag}"
          env.BUILDIMG=imageName
          sh "docker build -t ${imageName} ."
          sh "docker push ${imageName}"          
        }
      }            
    }

    stage("Deployment") {                        
      when {
        expression { env.GIT_BRANCH == 'origin/master' }
      }      
      steps {
        sh "kubectl config view"
        sh "kubectl config --kubeconfig=$KUBECONFIG view"
        sh "kubectl config --kubeconfig=$KUBECONFIG use-context production"
        sh "sed 's#__IMAGE__#'$BUILDIMG'#' deployment.yaml | kubectl --kubeconfig=$KUBECONFIG apply -f -"
      }           
    }

    stage("Clean workspace") { 
      steps {
        deleteDir()
        sh 'ls -lah'
      }
    }
  }
}
